### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/Users/T/.opam/4.07.1/bin/ocamldep.opt -modules main.ml > main.ml.depends
# Target: expr.ml.depends, tags: { extension:ml, file:expr.ml, ocaml, ocamldep, quiet }
/Users/T/.opam/4.07.1/bin/ocamldep.opt -modules expr.ml > expr.ml.depends
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/Users/T/.opam/4.07.1/bin/ocamllex.opt -q lexer.mll
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/Users/T/.opam/4.07.1/bin/ocamldep.opt -modules lexer.ml > lexer.ml.depends
# Target: parser.mly.depends, tags: { extension:mly, file:parser.mly, infer, menhir_ocamldep, ocaml, ocamldep, quiet }
menhir --raw-depend --ocamldep '/Users/T/.opam/4.07.1/bin/ocamldep.opt -modules' parser.mly > parser.mly.depends
# Target: expr.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:expr.cmo, file:expr.ml, implem, ocaml, quiet }
/Users/T/.opam/4.07.1/bin/ocamlc.opt -c -o expr.cmo expr.ml
# Target: parser.mly, tags: { byte, compile, extension:ml, extension:mly, file:parser.ml, file:parser.mly, infer, menhir, ocaml, parser, quiet }
menhir --ocamlc /Users/T/.opam/4.07.1/bin/ocamlc.opt --infer parser.mly
+ menhir --ocamlc /Users/T/.opam/4.07.1/bin/ocamlc.opt --infer parser.mly
Warning: 2 states have shift/reduce conflicts.
Warning: 2 shift/reduce conflicts were arbitrarily resolved.
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/Users/T/.opam/4.07.1/bin/ocamldep.opt -modules parser.mli > parser.mli.depends
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/Users/T/.opam/4.07.1/bin/ocamlc.opt -c -o parser.cmi parser.mli
# Target: poly.ml.depends, tags: { extension:ml, file:poly.ml, ocaml, ocamldep, quiet }
/Users/T/.opam/4.07.1/bin/ocamldep.opt -modules poly.ml > poly.ml.depends
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
/Users/T/.opam/4.07.1/bin/ocamlc.opt -c -o lexer.cmo lexer.ml
# Target: poly.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:poly.cmo, file:poly.ml, implem, ocaml, quiet }
/Users/T/.opam/4.07.1/bin/ocamlc.opt -c -o poly.cmo poly.ml
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/Users/T/.opam/4.07.1/bin/ocamlc.opt -c -o main.cmo main.ml
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/Users/T/.opam/4.07.1/bin/ocamldep.opt -modules parser.ml > parser.ml.depends
# Target: parser.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:parser.cmo, file:parser.ml, implem, ocaml, quiet }
/Users/T/.opam/4.07.1/bin/ocamlc.opt -c -o parser.cmo parser.ml
# Target: main.byte, tags: { byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet }
/Users/T/.opam/4.07.1/bin/ocamlc.opt expr.cmo parser.cmo lexer.cmo poly.cmo main.cmo -o main.byte
# Compilation successful.
